#!/opt/perl/bin/perl

use 5.010;
use warnings;
use strict;
use autodie;

use CPAN::Package;
use Cwd             qw/abs_path/;
use List::Util      qw/first/;
use Try::Tiny;

$SIG{INT} = sub {
    warn "Interrupt, exiting\n";
    exit 0;
};

my $Conf = CPAN::Package->new(
    builtby     => "ben\@morrow.me.uk",
    verb        => 2,
    log         => "log",
    redirect_stdh   => 1,

    perl        => "/opt/perl/bin/perl",
    prefix      => "/opt/perl",
    initpkgs    => [ qw[
        pkg-1.1.3_1
        opt-perl-5.16.3
        mksh-r46
    ]],

    extradeps   => {
        "Authen-SASL-XS" => {
            configure   => {
                "Devel::CheckLib" => 0,
            }
        }
    },

    dist        => abs_path("dist"),
    packages    => abs_path("pkg"),
    pkgdb       => abs_path("pkgdb"),

    su          => sub { 
        my ($conf, @cmd) = @_;
        $conf->system("sudo", @cmd);
    },
);

my $jail    = $Conf->find(Jail => "91R-amd64");
my $pkg     = $jail->pkgtool;
my $pkgdb   = $jail->pkgdb;

$jail->start;
$pkg->install_sys_pkgs($Conf->initpkgs);

my @mods = @ARGV;
my (%tried, %failed);

sub check_reqs {
    my ($Conf, $build, $phase) = @_;

    if (my @needed = $build->satisfy_reqs($phase)) {
        if (my $fail = first { $failed{$_} } @needed) {
            $Conf->throw("Fail", "Already failed to build $fail");
        }
        $Conf->throw("Needed", \@needed);
    }
};

while (my $mod = shift @mods) {
    my $dist        = $Conf->find(Dist => spec => $mod);
    my $distname    = $dist->name;

    try {
        if ($tried{$distname}) {
            $Conf->throw("Skip", "Already tried $distname");
            next;
        }
        $tried{$distname} = 1;

        $dist->fetch;

        my $build = $Conf->find(Build => $jail, $dist);
        $build->unpack_dist;
        $build->read_meta("META");

        check_reqs($Conf, $build, "configure");
        $build->configure_dist;
        $build->read_meta("MYMETA");

        check_reqs($Conf, $build, "build");
        $build->make_dist($_) for qw/build install/;
        $build->fixup_install;

        $pkg->create_pkg($build);
    }
    catch {
        unless (eval { $_->isa("CPAN::Package::Exception") }) {
            $Conf->say(1, "$distname failed");
            $Conf->say(2, "  $_");
            return;
        }
        
        my $type = $_->type;
        my $info = $_->info;

        if ($type eq "Needed") {
            $Conf->say(1, "Defer $distname");
            delete $tried{$distname};
            unshift @mods, @$info, $mod;
        }
        elsif ($type eq "Skip") {
            $Conf->say(1, "Skip $distname");
            $Conf->say(2, "  $info");
        }
        else {
            $failed{$mod} = 1;
            $Conf->say(1, "$distname failed");
            $Conf->say(2, "  $type ($info)");
        }
    };
}

if (%failed) {
    $Conf->say(1, "Failed to build:");
    $Conf->say(1, "  $_") for keys %failed;
}

$jail->injail("", "sh", "-c", "$ENV{SHELL} >/dev/tty 2>&1");

$jail->stop;
